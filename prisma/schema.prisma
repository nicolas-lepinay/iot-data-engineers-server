// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model House {
  id         String      @id @default(uuid())
  name       String
  rooms      Room[]
  equipments Equipment[]
  events     Event[]
}

model Room {
  id         String      @id @default(uuid())
  name       String
  house      House       @relation(fields: [houseId], references: [id])
  houseId    String
  equipments Equipment[]
}

model Equipment {
  id      String  @id @default(uuid())
  esp32Id String
  name    String
  state   Boolean
  value   String?
  unit    String?
  house   House   @relation(fields: [houseId], references: [id])
  houseId String
  room    Room?   @relation(fields: [roomId], references: [id])
  roomId  String?
  events  Event[]

  @@unique([esp32Id, houseId]) // Indice composite unique
}

model Event {
  id               String    @id @default(uuid())
  date             DateTime  @default(now())
  state            Boolean
  value            String?
  unit             String?
  equipmentEsp32Id String
  houseId          String
  // Relation composite avec l'Ã©quipement
  equipment        Equipment @relation(fields: [equipmentEsp32Id, houseId], references: [esp32Id, houseId])
  // Relation directe avec la maison
  house            House     @relation(fields: [houseId], references: [id])
}
